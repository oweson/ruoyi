<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TravelMapper">
    
    <resultMap type="Travel" id="TravelResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="city"    column="city"    />
        <result property="time"    column="time"    />
        <result property="introduction"    column="introduction"    />
        <result property="remark"    column="remark"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectTravelVo">
        select id, name, city, time, introduction, remark, create_time, update_time from travel
    </sql>

    <select id="selectTravelList" parameterType="Travel" resultMap="TravelResult">
        <include refid="selectTravelVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="city != null  and city != ''"> and city = #{city}</if>
            <if test="params.beginTime != null and params.beginTime != '' and params.endTime != null and params.endTime != ''"> and time between #{params.beginTime} and #{params.endTime}</if>
            <if test="introduction != null  and introduction != ''"> and introduction like concat('%', #{introduction}, '%')</if>
        </where>
    </select>
    
    <select id="selectTravelById" parameterType="Long" resultMap="TravelResult">
        <include refid="selectTravelVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTravel" parameterType="Travel">
        insert into travel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="city != null">city,</if>
            <if test="time != null">time,</if>
            <if test="introduction != null">introduction,</if>
            <if test="remark != null">remark,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="name != null">#{name},</if>
            <if test="city != null">#{city},</if>
            <if test="time != null">#{time},</if>
            <if test="introduction != null">#{introduction},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateTravel" parameterType="Travel">
        update travel
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="city != null">city = #{city},</if>
            <if test="time != null">time = #{time},</if>
            <if test="introduction != null">introduction = #{introduction},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTravelById" parameterType="Long">
        delete from travel where id = #{id}
    </delete>

    <delete id="deleteTravelByIds" parameterType="String">
        delete from travel where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>