<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.WordsMapper">
    
    <resultMap type="Words" id="WordsResult">
        <result property="id"    column="id"    />
        <result property="word"    column="word"    />
        <result property="englishPronunciation"    column="english_pronunciation"    />
        <result property="americaPronunciation"    column="america_pronunciation"    />
        <result property="meaning"    column="meaning"    />
    </resultMap>

    <sql id="selectWordsVo">
        select id, word, english_pronunciation, america_pronunciation, meaning from words
    </sql>

    <select id="selectWordsList" parameterType="Words" resultMap="WordsResult">
        <include refid="selectWordsVo"/>
        <where>  
            <if test="word != null  and word != ''"> and word like concat('%', #{word}, '%')</if>
            <if test="englishPronunciation != null  and englishPronunciation != ''"> and english_pronunciation like concat('%', #{englishPronunciation}, '%')</if>
            <if test="americaPronunciation != null  and americaPronunciation != ''"> and america_pronunciation like concat('%', #{americaPronunciation}, '%')</if>
            <if test="meaning != null  and meaning != ''"> and meaning like concat('%', #{meaning}, '%')</if>
        </where>
    </select>
    
    <select id="selectWordsById" parameterType="Integer" resultMap="WordsResult">
        <include refid="selectWordsVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertWords" parameterType="Words" useGeneratedKeys="true" keyProperty="id">
        insert into words
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="word != null and word != ''">word,</if>
            <if test="englishPronunciation != null">english_pronunciation,</if>
            <if test="americaPronunciation != null">america_pronunciation,</if>
            <if test="meaning != null">meaning,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="word != null and word != ''">#{word},</if>
            <if test="englishPronunciation != null">#{englishPronunciation},</if>
            <if test="americaPronunciation != null">#{americaPronunciation},</if>
            <if test="meaning != null">#{meaning},</if>
         </trim>
    </insert>

    <update id="updateWords" parameterType="Words">
        update words
        <trim prefix="SET" suffixOverrides=",">
            <if test="word != null and word != ''">word = #{word},</if>
            <if test="englishPronunciation != null">english_pronunciation = #{englishPronunciation},</if>
            <if test="americaPronunciation != null">america_pronunciation = #{americaPronunciation},</if>
            <if test="meaning != null">meaning = #{meaning},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteWordsById" parameterType="Integer">
        delete from words where id = #{id}
    </delete>

    <delete id="deleteWordsByIds" parameterType="String">
        delete from words where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>