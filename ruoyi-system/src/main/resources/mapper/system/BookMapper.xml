<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.BookMapper">
    
    <resultMap type="Book" id="BookResult">
        <result property="id"    column="id"    />
        <result property="bookName"    column="book_name"    />
        <result property="author"    column="author"    />
        <result property="bookIntroduction"    column="book_introduction"    />
        <result property="bookRemark"    column="book_remark"    />
        <result property="bookType"    column="book_type"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectBookVo">
        select id, book_name, author, book_introduction, book_remark, book_type, create_time, update_time from book
    </sql>

    <select id="selectBookList" parameterType="Book" resultMap="BookResult">
        <include refid="selectBookVo"/>
        <where>  
            <if test="bookName != null  and bookName != ''"> and book_name like concat('%', #{bookName}, '%')</if>
            <if test="bookIntroduction != null  and bookIntroduction != ''"> and book_introduction like concat('%', #{bookIntroduction}, '%')</if>
            <if test="bookRemark != null  and bookRemark != ''"> and book_remark like concat('%', #{bookRemark}, '%')</if>
            <if test="bookType != null  and bookType != ''"> and book_type = #{bookType}</if>
        </where>
    </select>
    
    <select id="selectBookById" parameterType="Long" resultMap="BookResult">
        <include refid="selectBookVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBook" parameterType="Book" useGeneratedKeys="true" keyProperty="id">
        insert into book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bookName != null">book_name,</if>
            <if test="author != null">author,</if>
            <if test="bookIntroduction != null">book_introduction,</if>
            <if test="bookRemark != null">book_remark,</if>
            <if test="bookType != null">book_type,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bookName != null">#{bookName},</if>
            <if test="author != null">#{author},</if>
            <if test="bookIntroduction != null">#{bookIntroduction},</if>
            <if test="bookRemark != null">#{bookRemark},</if>
            <if test="bookType != null">#{bookType},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBook" parameterType="Book">
        update book
        <trim prefix="SET" suffixOverrides=",">
            <if test="bookName != null">book_name = #{bookName},</if>
            <if test="author != null">author = #{author},</if>
            <if test="bookIntroduction != null">book_introduction = #{bookIntroduction},</if>
            <if test="bookRemark != null">book_remark = #{bookRemark},</if>
            <if test="bookType != null">book_type = #{bookType},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBookById" parameterType="Long">
        delete from book where id = #{id}
    </delete>

    <delete id="deleteBookByIds" parameterType="String">
        delete from book where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>