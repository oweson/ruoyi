<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.EmployeeMapper">
    
    <resultMap type="Employee" id="EmployeeResult">
        <result property="idnumber"    column="idnumber"    />
        <result property="startdate"    column="startdate"    />
        <result property="name"    column="name"    />
        <result property="smstel"    column="smstel"    />
        <result property="positionname"    column="positionname"    />
        <result property="beemployeedate"    column="beemployeedate"    />
        <result property="status"    column="status"    />
        <result property="teachercountry"    column="teachercountry"    />
        <result property="nickname"    column="nickname"    />
        <result property="email"    column="email"    />
        <result property="sex"    column="sex"    />
        <result property="serial"    column="serial"    />
        <result property="account"    column="account"    />
        <result property="outcausename"    column="outcausename"    />
        <result property="enddate"    column="enddate"    />
        <result property="dnamepart"    column="dnamepart"    />
        <result property="depart"    column="depart"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectEmployeeVo">
        select idnumber, startdate,  name, smstel, positionname, beemployeedate, status, teachercountry, nickname, email, sex, serial, account, outcausename, enddate, dnamepart, depart, create_time, update_time from employee
    </sql>

    <select id="selectEmployeeList" parameterType="Employee" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        <where>  
            <if test="idnumber != null  and idnumber != ''"> and idnumber like concat('%', #{idnumber}, '%')</if>
            <if test="params.beginStartdate != null and params.beginStartdate != '' and params.endStartdate != null and params.endStartdate != ''"> and startdate between #{params.beginStartdate} and #{params.endStartdate}</if>
            <if test="name != null  and name != ''"> and  name like concat('%', #{name}, '%')</if>
            <if test="smstel != null  and smstel != ''"> and smstel like concat('%', #{smstel}, '%')</if>
            <if test="positionname != null  and positionname != ''"> and positionname like concat('%', #{positionname}, '%')</if>
            <if test="params.beginBeemployeedate != null and params.beginBeemployeedate != '' and params.endBeemployeedate != null and params.endBeemployeedate != ''"> and beemployeedate between #{params.beginBeemployeedate} and #{params.endBeemployeedate}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
            <if test="dnamepart != null  and dnamepart != ''"> and dnamepart like concat('%', #{dnamepart}, '%')</if>
            <if test="depart != null  and depart != ''"> and depart like concat('%', #{depart}, '%')</if>
        </where>
        order by startdate desc
    </select>

    <select id="selectEmployeeListSync" parameterType="Employee" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>

        order by startdate desc
    </select>
    
    <select id="selectEmployeeById" parameterType="String" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        where idnumber = #{idnumber}
    </select>
        
    <insert id="insertEmployee" parameterType="Employee">
        insert ignore into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="idnumber != null">idnumber,</if>
            <if test="startdate != null">startdate,</if>
            <if test="name != null"> name,</if>
            <if test="smstel != null">smstel,</if>
            <if test="positionname != null">positionname,</if>
            <if test="beemployeedate != null">beemployeedate,</if>
            <if test="status != null">status,</if>
            <if test="teachercountry != null">teachercountry,</if>
            <if test="nickname != null">nickname,</if>
            <if test="email != null">email,</if>
            <if test="sex != null">sex,</if>
            <if test="serial != null">serial,</if>
            <if test="account != null">account,</if>
            <if test="outcausename != null">outcausename,</if>
            <if test="enddate != null">enddate,</if>
            <if test="dnamepart != null">dnamepart,</if>
            <if test="depart != null">depart,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="idnumber != null">#{idnumber},</if>
            <if test="startdate != null">#{startdate},</if>
            <if test="name != null">#{name},</if>
            <if test="smstel != null">#{smstel},</if>
            <if test="positionname != null">#{positionname},</if>
            <if test="beemployeedate != null">#{beemployeedate},</if>
            <if test="status != null">#{status},</if>
            <if test="teachercountry != null">#{teachercountry},</if>
            <if test="nickname != null">#{nickname},</if>
            <if test="email != null">#{email},</if>
            <if test="sex != null">#{sex},</if>
            <if test="serial != null">#{serial},</if>
            <if test="account != null">#{account},</if>
            <if test="outcausename != null">#{outcausename},</if>
            <if test="enddate != null">#{enddate},</if>
            <if test="dnamepart != null">#{dnamepart},</if>
            <if test="depart != null">#{depart},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateEmployee" parameterType="Employee">
        update employee
        <trim prefix="SET" suffixOverrides=",">
            <if test="startdate != null">startdate = #{startdate},</if>
            <if test="name != null"> name = #{name},</if>
            <if test="smstel != null">smstel = #{smstel},</if>
            <if test="positionname != null">positionname = #{positionname},</if>
            <if test="beemployeedate != null">beemployeedate = #{beemployeedate},</if>
            <if test="status != null">status = #{status},</if>
            <if test="teachercountry != null">teachercountry = #{teachercountry},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="email != null">email = #{email},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="serial != null">serial = #{serial},</if>
            <if test="account != null">account = #{account},</if>
            <if test="outcausename != null">outcausename = #{outcausename},</if>
            <if test="enddate != null">enddate = #{enddate},</if>
            <if test="dnamepart != null">dnamepart = #{dnamepart},</if>
            <if test="depart != null">depart = #{depart},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where idnumber = #{idnumber}
    </update>

    <delete id="deleteEmployeeById" parameterType="String">
        delete from employee where idnumber = #{idnumber}
    </delete>

    <delete id="deleteEmployeeByIds" parameterType="String">
        delete from employee where idnumber in 
        <foreach item="idnumber" collection="array" open="(" separator="," close=")">
            #{idnumber}
        </foreach>
    </delete>

</mapper>